{"cells":[{"cell_type":"code","source":[],"metadata":{"id":"aQwxxl9wAR5p"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["IMPORT LIBRARIES\n"],"metadata":{"id":"3S084BGMAqEy"}},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"i14APIj5AuR5"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["LOAD DATASET"],"metadata":{"id":"K3qlnTPFA0UJ"}},{"cell_type":"code","source":["data=pd.read_csv('iris.csv')"],"metadata":{"id":"6eUmaL1dA2UK","colab":{"base_uri":"https://localhost:8080/","height":147},"executionInfo":{"status":"error","timestamp":1709804453680,"user_tz":-330,"elapsed":3,"user":{"displayName":"21R11A66B7 KILLADI HARSHITH","userId":"06931799172885129036"}},"outputId":"eb587e20-fa26-45be-ee32-8f55d8837a72"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'pd' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-8-3168d7e1d673>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'iris.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'pd' is not defined"]}]},{"cell_type":"code","source":["data.head()"],"metadata":{"id":"exvsk81pBFmC","executionInfo":{"status":"error","timestamp":1709804451144,"user_tz":-330,"elapsed":402,"user":{"displayName":"21R11A66B7 KILLADI HARSHITH","userId":"06931799172885129036"}},"outputId":"da547aee-e4c0-4b6a-d52a-719e7c61e0ed","colab":{"base_uri":"https://localhost:8080/","height":147}},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'data' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-7-304fa4ce4ebd>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'data' is not defined"]}]},{"cell_type":"code","source":["data.info()"],"metadata":{"id":"2kenMXlZBYcx","executionInfo":{"status":"ok","timestamp":1709196027076,"user_tz":-330,"elapsed":389,"user":{"displayName":"","userId":""}},"outputId":"3239b6a5-86ca-4bde-87c1-958d831e5037","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 150 entries, 0 to 149\n","Data columns (total 5 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   sepal_length  150 non-null    float64\n"," 1   sepal_width   150 non-null    float64\n"," 2   petal_length  150 non-null    float64\n"," 3   petal_width   150 non-null    float64\n"," 4   species       150 non-null    object \n","dtypes: float64(4), object(1)\n","memory usage: 6.0+ KB\n"]}]},{"cell_type":"code","source":["data.describe()"],"metadata":{"id":"kfCjMmvBBcnb","executionInfo":{"status":"ok","timestamp":1709196056258,"user_tz":-330,"elapsed":6,"user":{"displayName":"","userId":""}},"outputId":"96a4f53b-7ac0-478f-dfb0-61b3b0251bdf","colab":{"base_uri":"https://localhost:8080/","height":300}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       sepal_length  sepal_width  petal_length  petal_width\n","count    150.000000   150.000000    150.000000   150.000000\n","mean       5.843333     3.054000      3.758667     1.198667\n","std        0.828066     0.433594      1.764420     0.763161\n","min        4.300000     2.000000      1.000000     0.100000\n","25%        5.100000     2.800000      1.600000     0.300000\n","50%        5.800000     3.000000      4.350000     1.300000\n","75%        6.400000     3.300000      5.100000     1.800000\n","max        7.900000     4.400000      6.900000     2.500000"],"text/html":["\n","  <div id=\"df-66557032-0a92-4bda-bde0-da7702b5d894\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>150.000000</td>\n","      <td>150.000000</td>\n","      <td>150.000000</td>\n","      <td>150.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5.843333</td>\n","      <td>3.054000</td>\n","      <td>3.758667</td>\n","      <td>1.198667</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.828066</td>\n","      <td>0.433594</td>\n","      <td>1.764420</td>\n","      <td>0.763161</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>4.300000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>0.100000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>5.100000</td>\n","      <td>2.800000</td>\n","      <td>1.600000</td>\n","      <td>0.300000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>5.800000</td>\n","      <td>3.000000</td>\n","      <td>4.350000</td>\n","      <td>1.300000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>6.400000</td>\n","      <td>3.300000</td>\n","      <td>5.100000</td>\n","      <td>1.800000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>7.900000</td>\n","      <td>4.400000</td>\n","      <td>6.900000</td>\n","      <td>2.500000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-66557032-0a92-4bda-bde0-da7702b5d894')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-66557032-0a92-4bda-bde0-da7702b5d894 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-66557032-0a92-4bda-bde0-da7702b5d894');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d70b5ab8-f0cd-4427-b662-ca81d6d65cd1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d70b5ab8-f0cd-4427-b662-ca81d6d65cd1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d70b5ab8-f0cd-4427-b662-ca81d6d65cd1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"sepal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 51.24711349471842,\n        \"min\": 0.828066127977863,\n        \"max\": 150.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5.843333333333334,\n          5.8,\n          150.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 52.08647211421483,\n        \"min\": 0.4335943113621737,\n        \"max\": 150.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.0540000000000003,\n          3.0,\n          150.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 51.835227940958106,\n        \"min\": 1.0,\n        \"max\": 150.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.758666666666666,\n          4.35,\n          150.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 52.636634243409915,\n        \"min\": 0.1,\n        \"max\": 150.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.1986666666666668,\n          1.3,\n          150.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["data.isnull().sum()"],"metadata":{"id":"VhiVvrxTBhCZ","executionInfo":{"status":"ok","timestamp":1709196192286,"user_tz":-330,"elapsed":5,"user":{"displayName":"","userId":""}},"outputId":"9bb31327-5aed-4cb5-f8fc-b8a3486b15e3","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sepal_length    0\n","sepal_width     0\n","petal_length    0\n","petal_width     0\n","species         0\n","dtype: int64"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sb"],"metadata":{"id":"wFZOP017CCco"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.plot()\n","plt.show()"],"metadata":{"id":"LKdXNGUSCro5","executionInfo":{"status":"ok","timestamp":1709196382944,"user_tz":-330,"elapsed":1016,"user":{"displayName":"","userId":""}},"outputId":"848f4748-640e-4d1c-ca0a-02f904d943d1","colab":{"base_uri":"https://localhost:8080/","height":430}},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["data.corr()"],"metadata":{"id":"DP6TS19DCvOI","executionInfo":{"status":"ok","timestamp":1709196505392,"user_tz":-330,"elapsed":8,"user":{"displayName":"","userId":""}},"outputId":"cfac6bb5-2db4-4155-fb4a-01689c1a804c","colab":{"base_uri":"https://localhost:8080/","height":230}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-12-c44ded798807>:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  data.corr()\n"]},{"output_type":"execute_result","data":{"text/plain":["              sepal_length  sepal_width  petal_length  petal_width\n","sepal_length      1.000000    -0.109369      0.871754     0.817954\n","sepal_width      -0.109369     1.000000     -0.420516    -0.356544\n","petal_length      0.871754    -0.420516      1.000000     0.962757\n","petal_width       0.817954    -0.356544      0.962757     1.000000"],"text/html":["\n","  <div id=\"df-58c3ff06-7923-4c0b-a42c-2ec4ad373a8a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>sepal_length</th>\n","      <td>1.000000</td>\n","      <td>-0.109369</td>\n","      <td>0.871754</td>\n","      <td>0.817954</td>\n","    </tr>\n","    <tr>\n","      <th>sepal_width</th>\n","      <td>-0.109369</td>\n","      <td>1.000000</td>\n","      <td>-0.420516</td>\n","      <td>-0.356544</td>\n","    </tr>\n","    <tr>\n","      <th>petal_length</th>\n","      <td>0.871754</td>\n","      <td>-0.420516</td>\n","      <td>1.000000</td>\n","      <td>0.962757</td>\n","    </tr>\n","    <tr>\n","      <th>petal_width</th>\n","      <td>0.817954</td>\n","      <td>-0.356544</td>\n","      <td>0.962757</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-58c3ff06-7923-4c0b-a42c-2ec4ad373a8a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-58c3ff06-7923-4c0b-a42c-2ec4ad373a8a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-58c3ff06-7923-4c0b-a42c-2ec4ad373a8a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8dde0ca0-ca44-41e3-8204-4a3ca98b9328\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8dde0ca0-ca44-41e3-8204-4a3ca98b9328')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8dde0ca0-ca44-41e3-8204-4a3ca98b9328 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"sepal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5087331794989353,\n        \"min\": -0.10936924995064931,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.10936924995064931,\n          0.8179536333691642,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6614868453597539,\n        \"min\": -0.4205160964011539,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0,\n          -0.35654408961380507,\n          -0.10936924995064931\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6847985519785192,\n        \"min\": -0.4205160964011539,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.4205160964011539,\n          0.9627570970509662,\n          0.8717541573048716\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6465103986023225,\n        \"min\": -0.35654408961380507,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.35654408961380507,\n          1.0,\n          0.8179536333691642\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["sb.heatmap(data.corr())"],"metadata":{"id":"jFJ_IDGoDOrY","executionInfo":{"status":"ok","timestamp":1709196573361,"user_tz":-330,"elapsed":1078,"user":{"displayName":"","userId":""}},"outputId":"9e1ab142-c60d-4386-a55a-af77312efeb7","colab":{"base_uri":"https://localhost:8080/","height":507}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-13-f70487d56dea>:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  sb.heatmap(data.corr())\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":13},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["data.columns\n"],"metadata":{"id":"6jOkrnjdDfNY","executionInfo":{"status":"error","timestamp":1709804441780,"user_tz":-330,"elapsed":403,"user":{"displayName":"21R11A66B7 KILLADI HARSHITH","userId":"06931799172885129036"}},"outputId":"2882acd8-4895-4f29-9ece-b5b3c341de18","colab":{"base_uri":"https://localhost:8080/","height":147}},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'data' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-c3d483a1c074>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'data' is not defined"]}]},{"cell_type":"code","source":["x=data.drop(\"species\",axis=1)\n","y=data.species"],"metadata":{"id":"93ExgxiMDwzo","colab":{"base_uri":"https://localhost:8080/","height":165},"executionInfo":{"status":"error","timestamp":1709804438124,"user_tz":-330,"elapsed":415,"user":{"displayName":"21R11A66B7 KILLADI HARSHITH","userId":"06931799172885129036"}},"outputId":"fa1311e8-7c94-4a53-b279-4a0156531175"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'data' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-6a16cfdf8c53>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"species\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mspecies\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'data' is not defined"]}]},{"cell_type":"code","source":["x.shape"],"metadata":{"id":"y3sNPNEqD81Y","executionInfo":{"status":"error","timestamp":1721373728491,"user_tz":-330,"elapsed":7,"user":{"displayName":"21R11A66B7 KILLADI HARSHITH","userId":"06931799172885129036"}},"outputId":"64c1b63d-aab0-4041-ebb4-18b7f167d349","colab":{"base_uri":"https://localhost:8080/","height":141}},"execution_count":1,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'x' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-9f2b259887ef>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'x' is not defined"]}]},{"cell_type":"code","source":["y.shape"],"metadata":{"id":"AavtEWUjD_eY","executionInfo":{"status":"ok","timestamp":1709196712114,"user_tz":-330,"elapsed":3,"user":{"displayName":"","userId":""}},"outputId":"9ec934c4-44f4-41ac-ff53-ce9ee2467a73","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(150,)"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split"],"metadata":{"id":"Vn7jMaslEcrp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)"],"metadata":{"id":"P7wCsCzKEq1p"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.neighbors import KNeighborsClassifier"],"metadata":{"id":"JG-s0Eo_E-t5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["knn=KNeighborsClassifier(n_neighbors=5)\n"],"metadata":{"id":"34Sw1QKzFZHJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["knn.fit(x_train,y_train)"],"metadata":{"id":"vs5MdZhKFrzJ","executionInfo":{"status":"ok","timestamp":1709197208674,"user_tz":-330,"elapsed":4,"user":{"displayName":"","userId":""}},"outputId":"76d24baf-f35b-4f9f-91af-5cd730592521","colab":{"base_uri":"https://localhost:8080/","height":75}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeClassifier()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["y_pred=model.predict(x_test)"],"metadata":{"id":"F0h71aXuF0HZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","print('accuracy report is---\\n',accuracy_score(y_test,y_pred))"],"metadata":{"id":"q_1SywG0GGXp","executionInfo":{"status":"ok","timestamp":1709197772184,"user_tz":-330,"elapsed":430,"user":{"displayName":"","userId":""}},"outputId":"1a7b60b9-7f01-40de-9aba-fc1ed30d29ba","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["accuracy report is---\n"," 0.9777777777777777\n"]}]},{"cell_type":"code","source":["y_pred"],"metadata":{"id":"KINUcWu9GWwp","executionInfo":{"status":"ok","timestamp":1709197346738,"user_tz":-330,"elapsed":837,"user":{"displayName":"","userId":""}},"outputId":"efed20de-039d-4a7e-a67f-8e6523dff501","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['versicolor', 'setosa', 'setosa', 'setosa', 'setosa', 'virginica',\n","       'setosa', 'virginica', 'versicolor', 'virginica', 'setosa',\n","       'versicolor', 'versicolor', 'virginica', 'virginica', 'versicolor',\n","       'virginica', 'virginica', 'versicolor', 'setosa', 'versicolor',\n","       'versicolor', 'setosa', 'versicolor', 'versicolor', 'virginica',\n","       'versicolor', 'virginica', 'versicolor', 'versicolor', 'setosa',\n","       'setosa', 'virginica', 'virginica', 'versicolor', 'versicolor',\n","       'setosa', 'virginica', 'virginica', 'setosa', 'virginica',\n","       'virginica', 'versicolor', 'setosa', 'versicolor'], dtype=object)"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","print('classification report is ---\\n',classification_report(y_test,y_pred))"],"metadata":{"id":"wgiSQNs_GcAp","executionInfo":{"status":"ok","timestamp":1709197758489,"user_tz":-330,"elapsed":396,"user":{"displayName":"","userId":""}},"outputId":"329eadf8-5801-42e7-c662-93b064ac72bc","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["classification report is ---\n","               precision    recall  f1-score   support\n","\n","      setosa       1.00      1.00      1.00        13\n","  versicolor       1.00      0.94      0.97        18\n","   virginica       0.93      1.00      0.97        14\n","\n","    accuracy                           0.98        45\n","   macro avg       0.98      0.98      0.98        45\n","weighted avg       0.98      0.98      0.98        45\n","\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix\n","print('Model confusion matrix is---\\n',confusion_matrix(y_test,y_pred))"],"metadata":{"id":"jol8ZS2pGwwZ","executionInfo":{"status":"ok","timestamp":1709197925688,"user_tz":-330,"elapsed":409,"user":{"displayName":"","userId":""}},"outputId":"602af32c-bfde-481f-c80f-28ac7d635a51","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model confusion matrix is---\n"," [[13  0  0]\n"," [ 0 17  1]\n"," [ 0  0 14]]\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"wMnwfjvoIxtJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"WSUUJ7BOJU3T","executionInfo":{"status":"ok","timestamp":1709198210436,"user_tz":-330,"elapsed":23165,"user":{"displayName":"","userId":""}},"outputId":"96c5a64b-ec52-4099-8835-b44bad5aee07","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["# New Section"],"metadata":{"id":"iCbHovCva1JC"}},{"cell_type":"code","source":["db_data=pd.read_csv('/pima_indian.csv')"],"metadata":{"id":"SiScYhhbJfaJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["db_data=pd.read_csv('/pima_indian.csv')"],"metadata":{"id":"dnlOmxvOJ0Mi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["db_data.head()"],"metadata":{"id":"nOBFKWGnK2dp","executionInfo":{"status":"ok","timestamp":1709198543680,"user_tz":-330,"elapsed":480,"user":{"displayName":"","userId":""}},"outputId":"f8c31a65-dd59-43ef-933c-e3c5ec077b27","colab":{"base_uri":"https://localhost:8080/","height":226}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   num_preg  glucose_conc  diastolic_bp  thickness  insulin   bmi  diab_pred  \\\n","0         6           148            72         35        0  33.6      0.627   \n","1         1            85            66         29        0  26.6      0.351   \n","2         8           183            64          0        0  23.3      0.672   \n","3         1            89            66         23       94  28.1      0.167   \n","4         0           137            40         35      168  43.1      2.288   \n","\n","   age  diabetes  \n","0   50         1  \n","1   31         0  \n","2   32         1  \n","3   21         0  \n","4   33         1  "],"text/html":["\n","  <div id=\"df-1855df3c-b989-4c45-923b-6d4a64c6b2ee\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>num_preg</th>\n","      <th>glucose_conc</th>\n","      <th>diastolic_bp</th>\n","      <th>thickness</th>\n","      <th>insulin</th>\n","      <th>bmi</th>\n","      <th>diab_pred</th>\n","      <th>age</th>\n","      <th>diabetes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>148</td>\n","      <td>72</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>33.6</td>\n","      <td>0.627</td>\n","      <td>50</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>85</td>\n","      <td>66</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>26.6</td>\n","      <td>0.351</td>\n","      <td>31</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8</td>\n","      <td>183</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>23.3</td>\n","      <td>0.672</td>\n","      <td>32</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>89</td>\n","      <td>66</td>\n","      <td>23</td>\n","      <td>94</td>\n","      <td>28.1</td>\n","      <td>0.167</td>\n","      <td>21</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>137</td>\n","      <td>40</td>\n","      <td>35</td>\n","      <td>168</td>\n","      <td>43.1</td>\n","      <td>2.288</td>\n","      <td>33</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1855df3c-b989-4c45-923b-6d4a64c6b2ee')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1855df3c-b989-4c45-923b-6d4a64c6b2ee button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1855df3c-b989-4c45-923b-6d4a64c6b2ee');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4015b41e-b8db-4060-9bd6-8b1ed8203521\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4015b41e-b8db-4060-9bd6-8b1ed8203521')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4015b41e-b8db-4060-9bd6-8b1ed8203521 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"db_data","summary":"{\n  \"name\": \"db_data\",\n  \"rows\": 768,\n  \"fields\": [\n    {\n      \"column\": \"num_preg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 17,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          6,\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"glucose_conc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31,\n        \"min\": 0,\n        \"max\": 199,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          151,\n          101,\n          112\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diastolic_bp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19,\n        \"min\": 0,\n        \"max\": 122,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          86,\n          46,\n          85\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thickness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 0,\n        \"max\": 99,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          7,\n          12,\n          48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"insulin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 115,\n        \"min\": 0,\n        \"max\": 846,\n        \"num_unique_values\": 186,\n        \"samples\": [\n          52,\n          41,\n          183\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bmi\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.884160320375446,\n        \"min\": 0.0,\n        \"max\": 67.1,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          19.9,\n          31.0,\n          38.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diab_pred\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3313285950127749,\n        \"min\": 0.078,\n        \"max\": 2.42,\n        \"num_unique_values\": 517,\n        \"samples\": [\n          1.731,\n          0.426,\n          0.138\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 21,\n        \"max\": 81,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          60,\n          47,\n          72\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diabetes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["db_data.info()"],"metadata":{"id":"bikF7RF5LADa","executionInfo":{"status":"ok","timestamp":1709198566558,"user_tz":-330,"elapsed":467,"user":{"displayName":"","userId":""}},"outputId":"8f164e09-8a67-422c-a646-b367b3c9a4a9","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 768 entries, 0 to 767\n","Data columns (total 9 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   num_preg      768 non-null    int64  \n"," 1   glucose_conc  768 non-null    int64  \n"," 2   diastolic_bp  768 non-null    int64  \n"," 3   thickness     768 non-null    int64  \n"," 4   insulin       768 non-null    int64  \n"," 5   bmi           768 non-null    float64\n"," 6   diab_pred     768 non-null    float64\n"," 7   age           768 non-null    int64  \n"," 8   diabetes      768 non-null    int64  \n","dtypes: float64(2), int64(7)\n","memory usage: 54.1 KB\n"]}]},{"cell_type":"code","source":["db_data.describe()"],"metadata":{"id":"2ZcwwdqNLF6Z","executionInfo":{"status":"ok","timestamp":1709198577282,"user_tz":-330,"elapsed":4,"user":{"displayName":"","userId":""}},"outputId":"588dc321-5f2e-4233-e761-bae9d4860a7d","colab":{"base_uri":"https://localhost:8080/","height":320}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         num_preg  glucose_conc  diastolic_bp   thickness     insulin  \\\n","count  768.000000    768.000000    768.000000  768.000000  768.000000   \n","mean     3.845052    120.894531     69.105469   20.536458   79.799479   \n","std      3.369578     31.972618     19.355807   15.952218  115.244002   \n","min      0.000000      0.000000      0.000000    0.000000    0.000000   \n","25%      1.000000     99.000000     62.000000    0.000000    0.000000   \n","50%      3.000000    117.000000     72.000000   23.000000   30.500000   \n","75%      6.000000    140.250000     80.000000   32.000000  127.250000   \n","max     17.000000    199.000000    122.000000   99.000000  846.000000   \n","\n","              bmi   diab_pred         age    diabetes  \n","count  768.000000  768.000000  768.000000  768.000000  \n","mean    31.992578    0.471876   33.240885    0.348958  \n","std      7.884160    0.331329   11.760232    0.476951  \n","min      0.000000    0.078000   21.000000    0.000000  \n","25%     27.300000    0.243750   24.000000    0.000000  \n","50%     32.000000    0.372500   29.000000    0.000000  \n","75%     36.600000    0.626250   41.000000    1.000000  \n","max     67.100000    2.420000   81.000000    1.000000  "],"text/html":["\n","  <div id=\"df-8b20f581-25a2-484b-9d67-cf412e1b38b8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>num_preg</th>\n","      <th>glucose_conc</th>\n","      <th>diastolic_bp</th>\n","      <th>thickness</th>\n","      <th>insulin</th>\n","      <th>bmi</th>\n","      <th>diab_pred</th>\n","      <th>age</th>\n","      <th>diabetes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>3.845052</td>\n","      <td>120.894531</td>\n","      <td>69.105469</td>\n","      <td>20.536458</td>\n","      <td>79.799479</td>\n","      <td>31.992578</td>\n","      <td>0.471876</td>\n","      <td>33.240885</td>\n","      <td>0.348958</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3.369578</td>\n","      <td>31.972618</td>\n","      <td>19.355807</td>\n","      <td>15.952218</td>\n","      <td>115.244002</td>\n","      <td>7.884160</td>\n","      <td>0.331329</td>\n","      <td>11.760232</td>\n","      <td>0.476951</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.078000</td>\n","      <td>21.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.000000</td>\n","      <td>99.000000</td>\n","      <td>62.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>27.300000</td>\n","      <td>0.243750</td>\n","      <td>24.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>3.000000</td>\n","      <td>117.000000</td>\n","      <td>72.000000</td>\n","      <td>23.000000</td>\n","      <td>30.500000</td>\n","      <td>32.000000</td>\n","      <td>0.372500</td>\n","      <td>29.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>6.000000</td>\n","      <td>140.250000</td>\n","      <td>80.000000</td>\n","      <td>32.000000</td>\n","      <td>127.250000</td>\n","      <td>36.600000</td>\n","      <td>0.626250</td>\n","      <td>41.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>17.000000</td>\n","      <td>199.000000</td>\n","      <td>122.000000</td>\n","      <td>99.000000</td>\n","      <td>846.000000</td>\n","      <td>67.100000</td>\n","      <td>2.420000</td>\n","      <td>81.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b20f581-25a2-484b-9d67-cf412e1b38b8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8b20f581-25a2-484b-9d67-cf412e1b38b8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8b20f581-25a2-484b-9d67-cf412e1b38b8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-45311e32-c380-4b58-a4d6-f0376c4f9f6e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-45311e32-c380-4b58-a4d6-f0376c4f9f6e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-45311e32-c380-4b58-a4d6-f0376c4f9f6e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"db_data\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"num_preg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 269.85223453356366,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.8450520833333335,\n          3.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"glucose_conc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243.73802348295857,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          120.89453125,\n          117.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diastolic_bp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 252.8525053581062,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          69.10546875,\n          72.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thickness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 263.7684730531098,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          768.0,\n          20.536458333333332,\n          32.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"insulin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 350.26059167945886,\n        \"min\": 0.0,\n        \"max\": 846.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          768.0,\n          79.79947916666667,\n          127.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bmi\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 262.05117817552093,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          31.992578124999998,\n          32.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diab_pred\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 271.3005221658502,\n        \"min\": 0.078,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.47187630208333325,\n          0.3725,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 260.1941178528413,\n        \"min\": 11.760231540678685,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          33.240885416666664,\n          29.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diabetes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 271.3865920388932,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.3489583333333333,\n          1.0,\n          0.47695137724279896\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["db_data.isnull().sum()"],"metadata":{"id":"Rgg6-QN_LIjp","executionInfo":{"status":"ok","timestamp":1709198606833,"user_tz":-330,"elapsed":2,"user":{"displayName":"","userId":""}},"outputId":"e7765edc-c399-4fd2-a6d0-6e61e760af1c","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["num_preg        0\n","glucose_conc    0\n","diastolic_bp    0\n","thickness       0\n","insulin         0\n","bmi             0\n","diab_pred       0\n","age             0\n","diabetes        0\n","dtype: int64"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["db_data.plot()\n","plt.show()"],"metadata":{"id":"Ansx9Y1cLPfZ","executionInfo":{"status":"ok","timestamp":1709198637234,"user_tz":-330,"elapsed":2381,"user":{"displayName":"","userId":""}},"outputId":"6e296ecc-d93b-4b7b-a490-da86d4b5dc40","colab":{"base_uri":"https://localhost:8080/","height":430}},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["db_data.corr()"],"metadata":{"id":"u9jfzv_fLWkJ","executionInfo":{"status":"ok","timestamp":1709198665322,"user_tz":-330,"elapsed":422,"user":{"displayName":"","userId":""}},"outputId":"92007552-aa39-4a5f-92eb-6ceaa81522a3","colab":{"base_uri":"https://localhost:8080/","height":352}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              num_preg  glucose_conc  diastolic_bp  thickness   insulin  \\\n","num_preg      1.000000      0.129459      0.141282  -0.081672 -0.073535   \n","glucose_conc  0.129459      1.000000      0.152590   0.057328  0.331357   \n","diastolic_bp  0.141282      0.152590      1.000000   0.207371  0.088933   \n","thickness    -0.081672      0.057328      0.207371   1.000000  0.436783   \n","insulin      -0.073535      0.331357      0.088933   0.436783  1.000000   \n","bmi           0.017683      0.221071      0.281805   0.392573  0.197859   \n","diab_pred    -0.033523      0.137337      0.041265   0.183928  0.185071   \n","age           0.544341      0.263514      0.239528  -0.113970 -0.042163   \n","diabetes      0.221898      0.466581      0.065068   0.074752  0.130548   \n","\n","                   bmi  diab_pred       age  diabetes  \n","num_preg      0.017683  -0.033523  0.544341  0.221898  \n","glucose_conc  0.221071   0.137337  0.263514  0.466581  \n","diastolic_bp  0.281805   0.041265  0.239528  0.065068  \n","thickness     0.392573   0.183928 -0.113970  0.074752  \n","insulin       0.197859   0.185071 -0.042163  0.130548  \n","bmi           1.000000   0.140647  0.036242  0.292695  \n","diab_pred     0.140647   1.000000  0.033561  0.173844  \n","age           0.036242   0.033561  1.000000  0.238356  \n","diabetes      0.292695   0.173844  0.238356  1.000000  "],"text/html":["\n","  <div id=\"df-1ec42cc3-256a-49ba-9145-c2a390b55f44\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>num_preg</th>\n","      <th>glucose_conc</th>\n","      <th>diastolic_bp</th>\n","      <th>thickness</th>\n","      <th>insulin</th>\n","      <th>bmi</th>\n","      <th>diab_pred</th>\n","      <th>age</th>\n","      <th>diabetes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>num_preg</th>\n","      <td>1.000000</td>\n","      <td>0.129459</td>\n","      <td>0.141282</td>\n","      <td>-0.081672</td>\n","      <td>-0.073535</td>\n","      <td>0.017683</td>\n","      <td>-0.033523</td>\n","      <td>0.544341</td>\n","      <td>0.221898</td>\n","    </tr>\n","    <tr>\n","      <th>glucose_conc</th>\n","      <td>0.129459</td>\n","      <td>1.000000</td>\n","      <td>0.152590</td>\n","      <td>0.057328</td>\n","      <td>0.331357</td>\n","      <td>0.221071</td>\n","      <td>0.137337</td>\n","      <td>0.263514</td>\n","      <td>0.466581</td>\n","    </tr>\n","    <tr>\n","      <th>diastolic_bp</th>\n","      <td>0.141282</td>\n","      <td>0.152590</td>\n","      <td>1.000000</td>\n","      <td>0.207371</td>\n","      <td>0.088933</td>\n","      <td>0.281805</td>\n","      <td>0.041265</td>\n","      <td>0.239528</td>\n","      <td>0.065068</td>\n","    </tr>\n","    <tr>\n","      <th>thickness</th>\n","      <td>-0.081672</td>\n","      <td>0.057328</td>\n","      <td>0.207371</td>\n","      <td>1.000000</td>\n","      <td>0.436783</td>\n","      <td>0.392573</td>\n","      <td>0.183928</td>\n","      <td>-0.113970</td>\n","      <td>0.074752</td>\n","    </tr>\n","    <tr>\n","      <th>insulin</th>\n","      <td>-0.073535</td>\n","      <td>0.331357</td>\n","      <td>0.088933</td>\n","      <td>0.436783</td>\n","      <td>1.000000</td>\n","      <td>0.197859</td>\n","      <td>0.185071</td>\n","      <td>-0.042163</td>\n","      <td>0.130548</td>\n","    </tr>\n","    <tr>\n","      <th>bmi</th>\n","      <td>0.017683</td>\n","      <td>0.221071</td>\n","      <td>0.281805</td>\n","      <td>0.392573</td>\n","      <td>0.197859</td>\n","      <td>1.000000</td>\n","      <td>0.140647</td>\n","      <td>0.036242</td>\n","      <td>0.292695</td>\n","    </tr>\n","    <tr>\n","      <th>diab_pred</th>\n","      <td>-0.033523</td>\n","      <td>0.137337</td>\n","      <td>0.041265</td>\n","      <td>0.183928</td>\n","      <td>0.185071</td>\n","      <td>0.140647</td>\n","      <td>1.000000</td>\n","      <td>0.033561</td>\n","      <td>0.173844</td>\n","    </tr>\n","    <tr>\n","      <th>age</th>\n","      <td>0.544341</td>\n","      <td>0.263514</td>\n","      <td>0.239528</td>\n","      <td>-0.113970</td>\n","      <td>-0.042163</td>\n","      <td>0.036242</td>\n","      <td>0.033561</td>\n","      <td>1.000000</td>\n","      <td>0.238356</td>\n","    </tr>\n","    <tr>\n","      <th>diabetes</th>\n","      <td>0.221898</td>\n","      <td>0.466581</td>\n","      <td>0.065068</td>\n","      <td>0.074752</td>\n","      <td>0.130548</td>\n","      <td>0.292695</td>\n","      <td>0.173844</td>\n","      <td>0.238356</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ec42cc3-256a-49ba-9145-c2a390b55f44')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1ec42cc3-256a-49ba-9145-c2a390b55f44 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1ec42cc3-256a-49ba-9145-c2a390b55f44');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ec0dc5ca-3d38-4f9c-8950-95f867ee3643\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ec0dc5ca-3d38-4f9c-8950-95f867ee3643')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ec0dc5ca-3d38-4f9c-8950-95f867ee3643 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"db_data\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"num_preg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3551273944830802,\n        \"min\": -0.08167177444900726,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.5443412284023392,\n          0.12945867149927248,\n          0.017683090727830565\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"glucose_conc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28767750976254863,\n        \"min\": 0.05732789073817692,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.26351431982433343,\n          1.0,\n          0.2210710694589828\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diastolic_bp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2937568072929426,\n        \"min\": 0.04126494793009856,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.23952794642136344,\n          0.1525895865686646,\n          0.2818052888499109\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thickness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3415504031654345,\n        \"min\": -0.11397026236774152,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          -0.11397026236774152,\n          0.05732789073817692,\n          0.39257320415903835\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"insulin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3242652539286031,\n        \"min\": -0.07353461435162822,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          -0.04216295473537695,\n          0.3313571099202092,\n          0.19785905649310145\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bmi\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.29340599982594495,\n        \"min\": 0.017683090727830565,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.03624187009229395,\n          0.2210710694589828,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diab_pred\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3073307082237146,\n        \"min\": -0.03352267296261304,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.03356131243480539,\n          0.13733729982837092,\n          0.14064695254510523\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3463473783514741,\n        \"min\": -0.11397026236774152,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          1.0,\n          0.26351431982433343,\n          0.03624187009229395\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diabetes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2911432844711856,\n        \"min\": 0.06506835955033277,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.23835598302719757,\n          0.46658139830687373,\n          0.2926946626444454\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["sb.heatmap(db_data.corr())"],"metadata":{"id":"tmiR-lm_LeEp","executionInfo":{"status":"ok","timestamp":1709198689780,"user_tz":-330,"elapsed":1482,"user":{"displayName":"","userId":""}},"outputId":"283fb9ac-7e57-48c4-9ba7-a3c9d674315a","colab":{"base_uri":"https://localhost:8080/","height":531}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":54},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["db_data.columns"],"metadata":{"id":"HcBnyMi2LjqZ","executionInfo":{"status":"ok","timestamp":1709198714395,"user_tz":-330,"elapsed":385,"user":{"displayName":"","userId":""}},"outputId":"4b169eb3-e37d-49da-eaf9-c7c2a4adaf4b","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['num_preg', 'glucose_conc', 'diastolic_bp', 'thickness', 'insulin',\n","       'bmi', 'diab_pred', 'age', 'diabetes'],\n","      dtype='object')"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["x=db_data.drop(\"diabetes\",axis=1)\n","y=db_data.diabetes"],"metadata":{"id":"7gg5anbKLqBp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x.shape"],"metadata":{"id":"YTXeQXoULwTp","executionInfo":{"status":"ok","timestamp":1709198781969,"user_tz":-330,"elapsed":624,"user":{"displayName":"","userId":""}},"outputId":"1a580dca-6e28-47cf-8c32-04c48b68f405","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(768, 8)"]},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["y.shape"],"metadata":{"id":"SlpIQwoEL6kK","executionInfo":{"status":"ok","timestamp":1709198793776,"user_tz":-330,"elapsed":4,"user":{"displayName":"","userId":""}},"outputId":"d9516d80-8c5c-4bc4-a0cd-dbe4e2d94e5f","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(768,)"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3)"],"metadata":{"id":"tEoCmUssL9O5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model=DecisionTreeClassifier()"],"metadata":{"id":"4k_lRnbtMDbZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model.fit(x_train,y_train)"],"metadata":{"id":"fqj8ajUuMH1Z","executionInfo":{"status":"ok","timestamp":1709198853173,"user_tz":-330,"elapsed":1108,"user":{"displayName":"","userId":""}},"outputId":"fea42a57-4c09-4205-a377-d23a49fafe83","colab":{"base_uri":"https://localhost:8080/","height":75}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeClassifier()"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["y_pred=model.predict(x_test)"],"metadata":{"id":"AUxVxIJHMLbJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","print('accuracy report is---\\n',accuracy_score(y_test,y_pred))"],"metadata":{"id":"AELK2-PbMQZp","executionInfo":{"status":"ok","timestamp":1709198924447,"user_tz":-330,"elapsed":4,"user":{"displayName":"","userId":""}},"outputId":"d60bb173-1d4a-4cab-dfe4-c0787b3665de","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["accuracy report is---\n"," 0.683982683982684\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","print('classification report is ---\\n',classification_report(y_test,y_pred))"],"metadata":{"id":"bm751AqFMTf5","executionInfo":{"status":"ok","timestamp":1709198957489,"user_tz":-330,"elapsed":426,"user":{"displayName":"","userId":""}},"outputId":"39188785-002a-4ba3-8345-ca6f5d76be97","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["classification report is ---\n","               precision    recall  f1-score   support\n","\n","           0       0.74      0.77      0.75       145\n","           1       0.58      0.53      0.56        86\n","\n","    accuracy                           0.68       231\n","   macro avg       0.66      0.65      0.66       231\n","weighted avg       0.68      0.68      0.68       231\n","\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix\n","print('Model confusion matrix is---\\n',confusion_matrix(y_test,y_pred))"],"metadata":{"id":"WfDs8kQ0MlWZ","executionInfo":{"status":"ok","timestamp":1709198973928,"user_tz":-330,"elapsed":4,"user":{"displayName":"","userId":""}},"outputId":"24191cf5-6d98-45ed-a6f4-076efeb17b5e","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model confusion matrix is---\n"," [[112  33]\n"," [ 40  46]]\n"]}]},{"cell_type":"code","source":["plot_tree(model)"],"metadata":{"id":"Se0YZNsEMpYZ","executionInfo":{"status":"ok","timestamp":1709199005864,"user_tz":-330,"elapsed":10931,"user":{"displayName":"","userId":""}},"outputId":"1c6556d8-a6c6-4720-8adc-68c784a37742","colab":{"base_uri":"https://localhost:8080/","height":1000}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Text(0.42918882978723405, 0.9642857142857143, 'x[1] <= 123.5\\ngini = 0.448\\nsamples = 537\\nvalue = [355, 182]'),\n"," Text(0.21675531914893617, 0.8928571428571429, 'x[7] <= 29.5\\ngini = 0.262\\nsamples = 310\\nvalue = [262, 48]'),\n"," Text(0.13031914893617022, 0.8214285714285714, 'x[3] <= 40.5\\ngini = 0.117\\nsamples = 192\\nvalue = [180, 12]'),\n"," Text(0.0797872340425532, 0.75, 'x[1] <= 118.5\\ngini = 0.076\\nsamples = 177\\nvalue = [170, 7]'),\n"," Text(0.0425531914893617, 0.6785714285714286, 'x[3] <= 31.5\\ngini = 0.047\\nsamples = 165\\nvalue = [161, 4]'),\n"," Text(0.02127659574468085, 0.6071428571428571, 'x[6] <= 0.668\\ngini = 0.014\\nsamples = 140\\nvalue = [139, 1]'),\n"," Text(0.010638297872340425, 0.5357142857142857, 'gini = 0.0\\nsamples = 118\\nvalue = [118, 0]'),\n"," Text(0.031914893617021274, 0.5357142857142857, 'x[6] <= 0.682\\ngini = 0.087\\nsamples = 22\\nvalue = [21, 1]'),\n"," Text(0.02127659574468085, 0.4642857142857143, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.0425531914893617, 0.4642857142857143, 'gini = 0.0\\nsamples = 21\\nvalue = [21, 0]'),\n"," Text(0.06382978723404255, 0.6071428571428571, 'x[2] <= 54.0\\ngini = 0.211\\nsamples = 25\\nvalue = [22, 3]'),\n"," Text(0.05319148936170213, 0.5357142857142857, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.07446808510638298, 0.5357142857142857, 'x[6] <= 0.509\\ngini = 0.153\\nsamples = 24\\nvalue = [22, 2]'),\n"," Text(0.06382978723404255, 0.4642857142857143, 'gini = 0.0\\nsamples = 20\\nvalue = [20, 0]'),\n"," Text(0.0851063829787234, 0.4642857142857143, 'x[7] <= 23.5\\ngini = 0.5\\nsamples = 4\\nvalue = [2, 2]'),\n"," Text(0.07446808510638298, 0.39285714285714285, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.09574468085106383, 0.39285714285714285, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.11702127659574468, 0.6785714285714286, 'x[3] <= 6.5\\ngini = 0.375\\nsamples = 12\\nvalue = [9, 3]'),\n"," Text(0.10638297872340426, 0.6071428571428571, 'x[5] <= 27.6\\ngini = 0.375\\nsamples = 4\\nvalue = [1, 3]'),\n"," Text(0.09574468085106383, 0.5357142857142857, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.11702127659574468, 0.5357142857142857, 'gini = 0.0\\nsamples = 3\\nvalue = [0, 3]'),\n"," Text(0.1276595744680851, 0.6071428571428571, 'gini = 0.0\\nsamples = 8\\nvalue = [8, 0]'),\n"," Text(0.18085106382978725, 0.75, 'x[0] <= 1.5\\ngini = 0.444\\nsamples = 15\\nvalue = [10, 5]'),\n"," Text(0.1595744680851064, 0.6785714285714286, 'x[2] <= 37.0\\ngini = 0.198\\nsamples = 9\\nvalue = [8, 1]'),\n"," Text(0.14893617021276595, 0.6071428571428571, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.1702127659574468, 0.6071428571428571, 'gini = 0.0\\nsamples = 8\\nvalue = [8, 0]'),\n"," Text(0.20212765957446807, 0.6785714285714286, 'x[1] <= 110.5\\ngini = 0.444\\nsamples = 6\\nvalue = [2, 4]'),\n"," Text(0.19148936170212766, 0.6071428571428571, 'gini = 0.0\\nsamples = 4\\nvalue = [0, 4]'),\n"," Text(0.2127659574468085, 0.6071428571428571, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.30319148936170215, 0.8214285714285714, 'x[4] <= 137.5\\ngini = 0.424\\nsamples = 118\\nvalue = [82, 36]'),\n"," Text(0.26595744680851063, 0.75, 'x[5] <= 26.8\\ngini = 0.355\\nsamples = 104\\nvalue = [80, 24]'),\n"," Text(0.24468085106382978, 0.6785714285714286, 'x[5] <= 10.85\\ngini = 0.061\\nsamples = 32\\nvalue = [31, 1]'),\n"," Text(0.23404255319148937, 0.6071428571428571, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.2553191489361702, 0.6071428571428571, 'gini = 0.0\\nsamples = 31\\nvalue = [31, 0]'),\n"," Text(0.2872340425531915, 0.6785714285714286, 'x[6] <= 1.111\\ngini = 0.435\\nsamples = 72\\nvalue = [49, 23]'),\n"," Text(0.2765957446808511, 0.6071428571428571, 'x[1] <= 106.5\\ngini = 0.403\\nsamples = 68\\nvalue = [49, 19]'),\n"," Text(0.21808510638297873, 0.5357142857142857, 'x[1] <= 28.5\\ngini = 0.273\\nsamples = 43\\nvalue = [36, 7]'),\n"," Text(0.2074468085106383, 0.4642857142857143, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.22872340425531915, 0.4642857142857143, 'x[6] <= 0.29\\ngini = 0.245\\nsamples = 42\\nvalue = [36, 6]'),\n"," Text(0.2074468085106383, 0.39285714285714285, 'x[5] <= 31.2\\ngini = 0.087\\nsamples = 22\\nvalue = [21, 1]'),\n"," Text(0.19680851063829788, 0.32142857142857145, 'x[5] <= 30.2\\ngini = 0.32\\nsamples = 5\\nvalue = [4, 1]'),\n"," Text(0.18617021276595744, 0.25, 'gini = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n"," Text(0.2074468085106383, 0.25, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.21808510638297873, 0.32142857142857145, 'gini = 0.0\\nsamples = 17\\nvalue = [17, 0]'),\n"," Text(0.25, 0.39285714285714285, 'x[6] <= 0.307\\ngini = 0.375\\nsamples = 20\\nvalue = [15, 5]'),\n"," Text(0.2393617021276596, 0.32142857142857145, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.26063829787234044, 0.32142857142857145, 'x[4] <= 88.0\\ngini = 0.278\\nsamples = 18\\nvalue = [15, 3]'),\n"," Text(0.25, 0.25, 'x[1] <= 99.5\\ngini = 0.208\\nsamples = 17\\nvalue = [15, 2]'),\n"," Text(0.22872340425531915, 0.17857142857142858, 'x[0] <= 9.0\\ngini = 0.124\\nsamples = 15\\nvalue = [14, 1]'),\n"," Text(0.21808510638297873, 0.10714285714285714, 'gini = 0.0\\nsamples = 13\\nvalue = [13, 0]'),\n"," Text(0.2393617021276596, 0.10714285714285714, 'x[7] <= 52.0\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.22872340425531915, 0.03571428571428571, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.25, 0.03571428571428571, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.2712765957446808, 0.17857142857142858, 'x[7] <= 37.0\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.26063829787234044, 0.10714285714285714, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.28191489361702127, 0.10714285714285714, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.2712765957446808, 0.25, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.3351063829787234, 0.5357142857142857, 'x[2] <= 90.0\\ngini = 0.499\\nsamples = 25\\nvalue = [13, 12]'),\n"," Text(0.324468085106383, 0.4642857142857143, 'x[7] <= 55.0\\ngini = 0.496\\nsamples = 22\\nvalue = [10, 12]'),\n"," Text(0.31382978723404253, 0.39285714285714285, 'x[2] <= 58.0\\ngini = 0.48\\nsamples = 20\\nvalue = [8, 12]'),\n"," Text(0.30319148936170215, 0.32142857142857145, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.324468085106383, 0.32142857142857145, 'x[5] <= 35.35\\ngini = 0.444\\nsamples = 18\\nvalue = [6, 12]'),\n"," Text(0.30319148936170215, 0.25, 'x[1] <= 118.5\\ngini = 0.298\\nsamples = 11\\nvalue = [2, 9]'),\n"," Text(0.2925531914893617, 0.17857142857142858, 'gini = 0.0\\nsamples = 9\\nvalue = [0, 9]'),\n"," Text(0.31382978723404253, 0.17857142857142858, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.34574468085106386, 0.25, 'x[7] <= 39.5\\ngini = 0.49\\nsamples = 7\\nvalue = [4, 3]'),\n"," Text(0.3351063829787234, 0.17857142857142858, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.35638297872340424, 0.17857142857142858, 'x[2] <= 85.0\\ngini = 0.375\\nsamples = 4\\nvalue = [1, 3]'),\n"," Text(0.34574468085106386, 0.10714285714285714, 'gini = 0.0\\nsamples = 3\\nvalue = [0, 3]'),\n"," Text(0.3670212765957447, 0.10714285714285714, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.3351063829787234, 0.39285714285714285, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.34574468085106386, 0.4642857142857143, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.2978723404255319, 0.6071428571428571, 'gini = 0.0\\nsamples = 4\\nvalue = [0, 4]'),\n"," Text(0.3404255319148936, 0.75, 'x[1] <= 122.5\\ngini = 0.245\\nsamples = 14\\nvalue = [2, 12]'),\n"," Text(0.32978723404255317, 0.6785714285714286, 'x[5] <= 25.55\\ngini = 0.142\\nsamples = 13\\nvalue = [1, 12]'),\n"," Text(0.3191489361702128, 0.6071428571428571, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.3404255319148936, 0.6071428571428571, 'gini = 0.0\\nsamples = 12\\nvalue = [0, 12]'),\n"," Text(0.35106382978723405, 0.6785714285714286, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.6416223404255319, 0.8928571428571429, 'x[5] <= 29.9\\ngini = 0.484\\nsamples = 227\\nvalue = [93, 134]'),\n"," Text(0.4375, 0.8214285714285714, 'x[7] <= 26.5\\ngini = 0.46\\nsamples = 64\\nvalue = [41, 23]'),\n"," Text(0.3829787234042553, 0.75, 'x[5] <= 28.8\\ngini = 0.18\\nsamples = 20\\nvalue = [18, 2]'),\n"," Text(0.3723404255319149, 0.6785714285714286, 'x[0] <= 2.5\\ngini = 0.1\\nsamples = 19\\nvalue = [18, 1]'),\n"," Text(0.3617021276595745, 0.6071428571428571, 'gini = 0.0\\nsamples = 17\\nvalue = [17, 0]'),\n"," Text(0.3829787234042553, 0.6071428571428571, 'x[4] <= 70.0\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.3723404255319149, 0.5357142857142857, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.39361702127659576, 0.5357142857142857, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.39361702127659576, 0.6785714285714286, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.4920212765957447, 0.75, 'x[7] <= 53.5\\ngini = 0.499\\nsamples = 44\\nvalue = [23, 21]'),\n"," Text(0.4627659574468085, 0.6785714285714286, 'x[7] <= 41.0\\ngini = 0.458\\nsamples = 31\\nvalue = [11, 20]'),\n"," Text(0.43617021276595747, 0.6071428571428571, 'x[3] <= 25.0\\ngini = 0.5\\nsamples = 20\\nvalue = [10, 10]'),\n"," Text(0.4148936170212766, 0.5357142857142857, 'x[7] <= 39.5\\ngini = 0.426\\nsamples = 13\\nvalue = [4, 9]'),\n"," Text(0.40425531914893614, 0.4642857142857143, 'x[6] <= 0.189\\ngini = 0.298\\nsamples = 11\\nvalue = [2, 9]'),\n"," Text(0.39361702127659576, 0.39285714285714285, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.4148936170212766, 0.39285714285714285, 'x[6] <= 0.506\\ngini = 0.18\\nsamples = 10\\nvalue = [1, 9]'),\n"," Text(0.40425531914893614, 0.32142857142857145, 'gini = 0.0\\nsamples = 8\\nvalue = [0, 8]'),\n"," Text(0.425531914893617, 0.32142857142857145, 'x[0] <= 4.5\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.4148936170212766, 0.25, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.43617021276595747, 0.25, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.425531914893617, 0.4642857142857143, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.4574468085106383, 0.5357142857142857, 'x[5] <= 27.1\\ngini = 0.245\\nsamples = 7\\nvalue = [6, 1]'),\n"," Text(0.44680851063829785, 0.4642857142857143, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.46808510638297873, 0.4642857142857143, 'gini = 0.0\\nsamples = 6\\nvalue = [6, 0]'),\n"," Text(0.48936170212765956, 0.6071428571428571, 'x[4] <= 133.5\\ngini = 0.165\\nsamples = 11\\nvalue = [1, 10]'),\n"," Text(0.4787234042553192, 0.5357142857142857, 'gini = 0.0\\nsamples = 9\\nvalue = [0, 9]'),\n"," Text(0.5, 0.5357142857142857, 'x[2] <= 75.0\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.48936170212765956, 0.4642857142857143, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.5106382978723404, 0.4642857142857143, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.5212765957446809, 0.6785714285714286, 'x[1] <= 194.5\\ngini = 0.142\\nsamples = 13\\nvalue = [12, 1]'),\n"," Text(0.5106382978723404, 0.6071428571428571, 'gini = 0.0\\nsamples = 12\\nvalue = [12, 0]'),\n"," Text(0.5319148936170213, 0.6071428571428571, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.8457446808510638, 0.8214285714285714, 'x[1] <= 157.5\\ngini = 0.434\\nsamples = 163\\nvalue = [52, 111]'),\n"," Text(0.7446808510638298, 0.75, 'x[5] <= 41.65\\ngini = 0.49\\nsamples = 100\\nvalue = [43, 57]'),\n"," Text(0.6595744680851063, 0.6785714285714286, 'x[7] <= 36.0\\ngini = 0.5\\nsamples = 80\\nvalue = [40, 40]'),\n"," Text(0.5957446808510638, 0.6071428571428571, 'x[6] <= 0.723\\ngini = 0.444\\nsamples = 42\\nvalue = [28, 14]'),\n"," Text(0.5638297872340425, 0.5357142857142857, 'x[2] <= 53.0\\ngini = 0.305\\nsamples = 32\\nvalue = [26, 6]'),\n"," Text(0.5319148936170213, 0.4642857142857143, 'x[6] <= 0.239\\ngini = 0.444\\nsamples = 3\\nvalue = [1, 2]'),\n"," Text(0.5212765957446809, 0.39285714285714285, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.5425531914893617, 0.39285714285714285, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.5957446808510638, 0.4642857142857143, 'x[5] <= 32.35\\ngini = 0.238\\nsamples = 29\\nvalue = [25, 4]'),\n"," Text(0.5638297872340425, 0.39285714285714285, 'x[0] <= 3.5\\ngini = 0.48\\nsamples = 5\\nvalue = [3, 2]'),\n"," Text(0.5531914893617021, 0.32142857142857145, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.574468085106383, 0.32142857142857145, 'x[3] <= 28.5\\ngini = 0.444\\nsamples = 3\\nvalue = [1, 2]'),\n"," Text(0.5638297872340425, 0.25, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.5851063829787234, 0.25, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.6276595744680851, 0.39285714285714285, 'x[1] <= 134.5\\ngini = 0.153\\nsamples = 24\\nvalue = [22, 2]'),\n"," Text(0.6170212765957447, 0.32142857142857145, 'x[1] <= 130.0\\ngini = 0.375\\nsamples = 8\\nvalue = [6, 2]'),\n"," Text(0.6063829787234043, 0.25, 'gini = 0.0\\nsamples = 5\\nvalue = [5, 0]'),\n"," Text(0.6276595744680851, 0.25, 'x[4] <= 148.0\\ngini = 0.444\\nsamples = 3\\nvalue = [1, 2]'),\n"," Text(0.6170212765957447, 0.17857142857142858, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.6382978723404256, 0.17857142857142858, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.6382978723404256, 0.32142857142857145, 'gini = 0.0\\nsamples = 16\\nvalue = [16, 0]'),\n"," Text(0.6276595744680851, 0.5357142857142857, 'x[4] <= 207.5\\ngini = 0.32\\nsamples = 10\\nvalue = [2, 8]'),\n"," Text(0.6170212765957447, 0.4642857142857143, 'gini = 0.0\\nsamples = 8\\nvalue = [0, 8]'),\n"," Text(0.6382978723404256, 0.4642857142857143, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.723404255319149, 0.6071428571428571, 'x[6] <= 0.397\\ngini = 0.432\\nsamples = 38\\nvalue = [12, 26]'),\n"," Text(0.6808510638297872, 0.5357142857142857, 'x[3] <= 26.5\\ngini = 0.498\\nsamples = 17\\nvalue = [9, 8]'),\n"," Text(0.6595744680851063, 0.4642857142857143, 'x[5] <= 33.3\\ngini = 0.463\\nsamples = 11\\nvalue = [4, 7]'),\n"," Text(0.648936170212766, 0.39285714285714285, 'gini = 0.0\\nsamples = 5\\nvalue = [0, 5]'),\n"," Text(0.6702127659574468, 0.39285714285714285, 'x[0] <= 6.0\\ngini = 0.444\\nsamples = 6\\nvalue = [4, 2]'),\n"," Text(0.6595744680851063, 0.32142857142857145, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.6808510638297872, 0.32142857142857145, 'x[1] <= 135.0\\ngini = 0.444\\nsamples = 3\\nvalue = [1, 2]'),\n"," Text(0.6702127659574468, 0.25, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.6914893617021277, 0.25, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.7021276595744681, 0.4642857142857143, 'x[7] <= 50.0\\ngini = 0.278\\nsamples = 6\\nvalue = [5, 1]'),\n"," Text(0.6914893617021277, 0.39285714285714285, 'gini = 0.0\\nsamples = 5\\nvalue = [5, 0]'),\n"," Text(0.7127659574468085, 0.39285714285714285, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.7659574468085106, 0.5357142857142857, 'x[5] <= 40.05\\ngini = 0.245\\nsamples = 21\\nvalue = [3, 18]'),\n"," Text(0.7446808510638298, 0.4642857142857143, 'x[4] <= 333.5\\ngini = 0.105\\nsamples = 18\\nvalue = [1, 17]'),\n"," Text(0.7340425531914894, 0.39285714285714285, 'gini = 0.0\\nsamples = 16\\nvalue = [0, 16]'),\n"," Text(0.7553191489361702, 0.39285714285714285, 'x[7] <= 44.0\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.7446808510638298, 0.32142857142857145, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.7659574468085106, 0.32142857142857145, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.7872340425531915, 0.4642857142857143, 'x[1] <= 131.0\\ngini = 0.444\\nsamples = 3\\nvalue = [2, 1]'),\n"," Text(0.776595744680851, 0.39285714285714285, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.7978723404255319, 0.39285714285714285, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.8297872340425532, 0.6785714285714286, 'x[6] <= 0.197\\ngini = 0.255\\nsamples = 20\\nvalue = [3, 17]'),\n"," Text(0.8191489361702128, 0.6071428571428571, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.8404255319148937, 0.6071428571428571, 'x[1] <= 153.0\\ngini = 0.188\\nsamples = 19\\nvalue = [2, 17]'),\n"," Text(0.8191489361702128, 0.5357142857142857, 'x[4] <= 290.5\\ngini = 0.111\\nsamples = 17\\nvalue = [1, 16]'),\n"," Text(0.8085106382978723, 0.4642857142857143, 'gini = 0.0\\nsamples = 15\\nvalue = [0, 15]'),\n"," Text(0.8297872340425532, 0.4642857142857143, 'x[6] <= 0.657\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.8191489361702128, 0.39285714285714285, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.8404255319148937, 0.39285714285714285, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.8617021276595744, 0.5357142857142857, 'x[7] <= 29.5\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.851063829787234, 0.4642857142857143, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.8723404255319149, 0.4642857142857143, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.9468085106382979, 0.75, 'x[4] <= 629.5\\ngini = 0.245\\nsamples = 63\\nvalue = [9, 54]'),\n"," Text(0.9361702127659575, 0.6785714285714286, 'x[6] <= 0.3\\ngini = 0.203\\nsamples = 61\\nvalue = [7, 54]'),\n"," Text(0.9148936170212766, 0.6071428571428571, 'x[6] <= 0.27\\ngini = 0.415\\nsamples = 17\\nvalue = [5, 12]'),\n"," Text(0.9042553191489362, 0.5357142857142857, 'x[7] <= 56.0\\ngini = 0.32\\nsamples = 15\\nvalue = [3, 12]'),\n"," Text(0.8936170212765957, 0.4642857142857143, 'x[0] <= 0.5\\ngini = 0.245\\nsamples = 14\\nvalue = [2, 12]'),\n"," Text(0.8723404255319149, 0.39285714285714285, 'x[4] <= 382.5\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.8617021276595744, 0.32142857142857145, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.8829787234042553, 0.32142857142857145, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.9148936170212766, 0.39285714285714285, 'x[0] <= 9.5\\ngini = 0.153\\nsamples = 12\\nvalue = [1, 11]'),\n"," Text(0.9042553191489362, 0.32142857142857145, 'gini = 0.0\\nsamples = 10\\nvalue = [0, 10]'),\n"," Text(0.925531914893617, 0.32142857142857145, 'x[3] <= 15.0\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.9148936170212766, 0.25, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.9361702127659575, 0.25, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.9148936170212766, 0.4642857142857143, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.925531914893617, 0.5357142857142857, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.9574468085106383, 0.6071428571428571, 'x[7] <= 44.0\\ngini = 0.087\\nsamples = 44\\nvalue = [2, 42]'),\n"," Text(0.9468085106382979, 0.5357142857142857, 'gini = 0.0\\nsamples = 33\\nvalue = [0, 33]'),\n"," Text(0.9680851063829787, 0.5357142857142857, 'x[7] <= 46.0\\ngini = 0.298\\nsamples = 11\\nvalue = [2, 9]'),\n"," Text(0.9574468085106383, 0.4642857142857143, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.9787234042553191, 0.4642857142857143, 'x[2] <= 69.0\\ngini = 0.18\\nsamples = 10\\nvalue = [1, 9]'),\n"," Text(0.9680851063829787, 0.39285714285714285, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.9893617021276596, 0.39285714285714285, 'gini = 0.0\\nsamples = 9\\nvalue = [0, 9]'),\n"," Text(0.9574468085106383, 0.6785714285714286, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]')]"]},"metadata":{},"execution_count":69},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["data=pd.read_csv('/titanic.csv')"],"metadata":{"id":"eXVBhpnxMuhp","executionInfo":{"status":"error","timestamp":1709200506255,"user_tz":-330,"elapsed":418,"user":{"displayName":"21R11A66B7 KILLADI HARSHITH","userId":"06931799172885129036"}},"colab":{"base_uri":"https://localhost:8080/","height":141},"outputId":"7f58be19-4388-4e7d-84d6-eb09228f2a05"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'pd' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-431a5adcce77>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/titanic.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'pd' is not defined"]}]},{"cell_type":"code","source":["data.head()"],"metadata":{"id":"GKimwponNOyZ","executionInfo":{"status":"ok","timestamp":1709199147547,"user_tz":-330,"elapsed":3,"user":{"displayName":"","userId":""}},"outputId":"50b7d843-54d4-4379-d19a-c1d3c4e2ea42","colab":{"base_uri":"https://localhost:8080/","height":504}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Survived  Pclass  \\\n","0            1         0       3   \n","1            2         1       1   \n","2            3         1       3   \n","3            4         1       1   \n","4            5         0       3   \n","\n","                                                Name     Sex   Age  SibSp  \\\n","0                            Braund, Mr. Owen Harris    male  22.0      1   \n","1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n","2                             Heikkinen, Miss. Laina  female  26.0      0   \n","3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n","4                           Allen, Mr. William Henry    male  35.0      0   \n","\n","   Parch            Ticket     Fare Cabin Embarked  \n","0      0         A/5 21171   7.2500   NaN        S  \n","1      0          PC 17599  71.2833   C85        C  \n","2      0  STON/O2. 3101282   7.9250   NaN        S  \n","3      0            113803  53.1000  C123        S  \n","4      0            373450   8.0500   NaN        S  "],"text/html":["\n","  <div id=\"df-fbc65f1f-513a-4029-ac48-050606044891\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>C123</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fbc65f1f-513a-4029-ac48-050606044891')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fbc65f1f-513a-4029-ac48-050606044891 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fbc65f1f-513a-4029-ac48-050606044891');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8daad7a9-e7dd-4f1a-a31c-3048743f2fef\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8daad7a9-e7dd-4f1a-a31c-3048743f2fef')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8daad7a9-e7dd-4f1a-a31c-3048743f2fef button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"PassengerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 257,\n        \"min\": 1,\n        \"max\": 891,\n        \"num_unique_values\": 891,\n        \"samples\": [\n          710,\n          440,\n          841\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 891,\n        \"samples\": [\n          \"Moubarek, Master. Halim Gonios (\\\"William George\\\")\",\n          \"Kvillner, Mr. Johan Henrik Johannesson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"female\",\n          \"male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.526497332334042,\n        \"min\": 0.42,\n        \"max\": 80.0,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          0.75,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SibSp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ticket\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 681,\n        \"samples\": [\n          \"11774\",\n          \"248740\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.6934285971809,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          11.2417,\n          51.8625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 147,\n        \"samples\": [\n          \"D45\",\n          \"B49\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Embarked\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"S\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["data.info()"],"metadata":{"id":"lOoUYDM6NTxa","executionInfo":{"status":"ok","timestamp":1709199156894,"user_tz":-330,"elapsed":6,"user":{"displayName":"","userId":""}},"outputId":"b61bd762-f65a-4d8f-e99b-74a7f1748a84","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 12 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  891 non-null    int64  \n"," 1   Survived     891 non-null    int64  \n"," 2   Pclass       891 non-null    int64  \n"," 3   Name         891 non-null    object \n"," 4   Sex          891 non-null    object \n"," 5   Age          714 non-null    float64\n"," 6   SibSp        891 non-null    int64  \n"," 7   Parch        891 non-null    int64  \n"," 8   Ticket       891 non-null    object \n"," 9   Fare         891 non-null    float64\n"," 10  Cabin        204 non-null    object \n"," 11  Embarked     889 non-null    object \n","dtypes: float64(2), int64(5), object(5)\n","memory usage: 83.7+ KB\n"]}]},{"cell_type":"code","source":["data.describe()"],"metadata":{"id":"8_ArDktzNWC5","executionInfo":{"status":"ok","timestamp":1709199194245,"user_tz":-330,"elapsed":445,"user":{"displayName":"","userId":""}},"outputId":"2dfc16b1-2e27-43ec-af13-70d9987a1d2a","colab":{"base_uri":"https://localhost:8080/","height":320}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       PassengerId    Survived      Pclass         Age       SibSp  \\\n","count   891.000000  891.000000  891.000000  714.000000  891.000000   \n","mean    446.000000    0.383838    2.308642   29.699118    0.523008   \n","std     257.353842    0.486592    0.836071   14.526497    1.102743   \n","min       1.000000    0.000000    1.000000    0.420000    0.000000   \n","25%     223.500000    0.000000    2.000000   20.125000    0.000000   \n","50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n","75%     668.500000    1.000000    3.000000   38.000000    1.000000   \n","max     891.000000    1.000000    3.000000   80.000000    8.000000   \n","\n","            Parch        Fare  \n","count  891.000000  891.000000  \n","mean     0.381594   32.204208  \n","std      0.806057   49.693429  \n","min      0.000000    0.000000  \n","25%      0.000000    7.910400  \n","50%      0.000000   14.454200  \n","75%      0.000000   31.000000  \n","max      6.000000  512.329200  "],"text/html":["\n","  <div id=\"df-4bca3fc3-8e29-41e2-88f0-51082267b6b0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>714.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>446.000000</td>\n","      <td>0.383838</td>\n","      <td>2.308642</td>\n","      <td>29.699118</td>\n","      <td>0.523008</td>\n","      <td>0.381594</td>\n","      <td>32.204208</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>257.353842</td>\n","      <td>0.486592</td>\n","      <td>0.836071</td>\n","      <td>14.526497</td>\n","      <td>1.102743</td>\n","      <td>0.806057</td>\n","      <td>49.693429</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.420000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>223.500000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>20.125000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.910400</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>446.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.454200</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>668.500000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>38.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>31.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>891.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>80.000000</td>\n","      <td>8.000000</td>\n","      <td>6.000000</td>\n","      <td>512.329200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4bca3fc3-8e29-41e2-88f0-51082267b6b0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4bca3fc3-8e29-41e2-88f0-51082267b6b0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4bca3fc3-8e29-41e2-88f0-51082267b6b0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7c49ba5c-367c-41f7-9f40-8983a13462b3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7c49ba5c-367c-41f7-9f40-8983a13462b3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7c49ba5c-367c-41f7-9f40-8983a13462b3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"PassengerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 320.8159711429855,\n        \"min\": 1.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          891.0,\n          446.0,\n          668.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 314.8713661874558,\n        \"min\": 0.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.3838383838383838,\n          1.0,\n          0.4865924542648575\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 314.2523437079694,\n        \"min\": 0.836071240977049,\n        \"max\": 891.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          891.0,\n          2.308641975308642,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 242.9056731818781,\n        \"min\": 0.42,\n        \"max\": 714.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          29.69911764705882,\n          28.0,\n          714.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SibSp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 314.4908277465442,\n        \"min\": 0.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          891.0,\n          0.5230078563411896,\n          8.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 314.65971717879,\n        \"min\": 0.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.38159371492704824,\n          6.0,\n          0.8060572211299483\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 330.6256632228578,\n        \"min\": 0.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          32.204207968574636,\n          14.4542,\n          891.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["data.isnull().sum()"],"metadata":{"id":"-hiiidi_NZx6","executionInfo":{"status":"ok","timestamp":1709199208552,"user_tz":-330,"elapsed":2,"user":{"displayName":"","userId":""}},"outputId":"abc43f60-f4e8-480a-9e55-488e8738d7a3","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId      0\n","Survived         0\n","Pclass           0\n","Name             0\n","Sex              0\n","Age            177\n","SibSp            0\n","Parch            0\n","Ticket           0\n","Fare             0\n","Cabin          687\n","Embarked         2\n","dtype: int64"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["data.columns"],"metadata":{"id":"NlW4viCcNivZ","executionInfo":{"status":"ok","timestamp":1709199233884,"user_tz":-330,"elapsed":427,"user":{"displayName":"","userId":""}},"outputId":"f90907eb-93e3-4bcb-908f-a4bfac819960","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['PassengerId', 'Survived', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp',\n","       'Parch', 'Ticket', 'Fare', 'Cabin', 'Embarked'],\n","      dtype='object')"]},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["data['Age'].fillna(data.Age.mean())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":141},"id":"adseEKOVQ-Ea","executionInfo":{"status":"error","timestamp":1709200461432,"user_tz":-330,"elapsed":461,"user":{"displayName":"21R11A66B7 KILLADI HARSHITH","userId":"06931799172885129036"}},"outputId":"a1cc89b9-7bda-4a94-e0ef-f8dfc79a3ebe"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'data' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-6cdf82dd5400>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdata\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Age'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfillna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mAge\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'data' is not defined"]}]},{"cell_type":"code","source":[],"metadata":{"id":"rbuo6S_LSUdB"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1709199386731}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}